/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package at.srfg;

import at.srfg.conveyorbelt.BeltListener;
import at.srfg.conveyorbelt.ConveyorBelt;

/**
 *
 * @author dglachs, mschmoig
 */
public class MainConveyorBelt extends javax.swing.JFrame {


    private ConveyorBelt belt;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButtonRegistration;
    private javax.swing.JToggleButton jToggleButtonComponent;
    private javax.swing.JToggleButton jToggleButtonBelt;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTree jTree1;

    private javax.swing.JLabel jLabel_MoveBelt;
    private javax.swing.JLabel jLabel_SwitchLight;
    private javax.swing.JLabel jLabel_BeltState;
    private javax.swing.JLabel jLabel_BeltDist;
    private javax.swing.JLabel jLabel_BeltMoving;

    private javax.swing.JTextField jTextField_MoveBelt;
    private javax.swing.JTextField jTextField_SwitchLight;
    private javax.swing.JTextField jTextField_BeltState;
    private javax.swing.JTextField jTextField_BeltDist;
    private javax.swing.JTextField jTextField_BeltMoving;
    // End of variables declaration//GEN-END:variables

    /*********************************************************************************************************
     * MainConveyorBelt: Creates new form NewJFrame
     ********************************************************************************************************/
    public MainConveyorBelt() {
        initComponents();
        belt = new ConveyorBelt();
        BeltListener listener = new BeltListener() {

            // writable
            @Override
            public void MoveBeltChanged() {
                jTextField_MoveBelt.setText(String.valueOf(belt.getMoveBelt()));
            }

            @Override
            public void SwitchBusyLightChanged() {
                jTextField_SwitchLight.setText(String.valueOf(belt.getSwitchBusyLight()));
            }

            // readable
            @Override
            public void ConBeltStateChanged() {
                jTextField_BeltState.setText(belt.getBeltState());
            }

            @Override
            public void ConBeltDistChanged() {
                jTextField_BeltDist.setText(belt.getBeltDist());
            }

            @Override
            public void ConBeltMovingChanged() {
                jTextField_BeltMoving.setText(String.valueOf(belt.getBeltMoving()));
            }
        };
        belt.setListener(listener);
    }


    /*********************************************************************************************************
     * initComponents
     *
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     ********************************************************************************************************/
    @SuppressWarnings("unchecked")
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jToolBar1 = new javax.swing.JToolBar();
        jToggleButtonRegistration = new javax.swing.JToggleButton();
        jToggleButtonBelt = new javax.swing.JToggleButton();
        jToggleButtonComponent = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();

        jLabel_MoveBelt = new javax.swing.JLabel();
        jLabel_SwitchLight = new javax.swing.JLabel();
        jLabel_BeltState = new javax.swing.JLabel();
        jLabel_BeltDist = new javax.swing.JLabel();
        jLabel_BeltMoving = new javax.swing.JLabel();

        jTextField_MoveBelt = new javax.swing.JTextField();
        jTextField_SwitchLight = new javax.swing.JTextField();
        jTextField_BeltState = new javax.swing.JTextField();
        jTextField_BeltDist = new javax.swing.JTextField();
        jTextField_BeltMoving = new javax.swing.JTextField();

        jScrollPane1.setViewportView(jTree1);
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jToolBar1.setRollover(true);

        jToggleButtonComponent.setText("I4.0 Component");
        jToggleButtonComponent.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jToggleButton1ItemStateChanged(evt);
            }
        });
        jToolBar1.add(jToggleButtonComponent);

        jToggleButtonRegistration.setText("Register Belt");
        jToggleButtonRegistration.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jToggleButton0ItemStateChanged(evt);
            }
        });
        jToolBar1.add(jToggleButtonRegistration);

        jToggleButtonBelt.setText("Start Belt");
        jToggleButtonBelt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jToggleButton2ItemStateChanged(evt);
            }
        });
        jToggleButtonBelt.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jToggleButton2StateChanged(evt);
            }
        });
        jToggleButtonBelt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButtonBelt);

        // assign text to all labels
        jLabel_MoveBelt.setText("MoveBelt");
        jLabel_SwitchLight.setText("SwitchLight");
        jLabel_BeltState.setText("BeltState");
        jLabel_BeltDist.setText("BeltDist");
        jLabel_BeltMoving.setText("BeltMoving");

        //jTextField2.setText("distanceField");
        //jTextField2.addActionListener(new java.awt.event.ActionListener() {
        //    public void actionPerformed(java.awt.event.ActionEvent evt) {
        //        jTextField2ActionPerformed(evt);
        //    }
        //});

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel_MoveBelt)
                                        .addComponent(jLabel_SwitchLight)
                                        .addComponent(jLabel_BeltState)
                                        .addComponent(jLabel_BeltDist)
                                        .addComponent(jLabel_BeltMoving))
                                .addGap(58, 58, 58)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextField_MoveBelt)
                                        .addComponent(jTextField_SwitchLight)
                                        .addComponent(jTextField_BeltState)
                                        .addComponent(jTextField_BeltDist)
                                        .addComponent(jTextField_BeltMoving, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextField_MoveBelt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel_MoveBelt))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel_SwitchLight)
                                        .addComponent(jTextField_SwitchLight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel_BeltState)
                                        .addComponent(jTextField_BeltState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel_BeltDist)
                                        .addComponent(jTextField_BeltDist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel_BeltMoving)
                                        .addComponent(jTextField_BeltMoving, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*********************************************************************************************************
     * ActionPerformed - Functions
     ********************************************************************************************************/
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {}
    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt){}
    private void jTextFieldRobotModeActionPerformed(java.awt.event.ActionEvent evt){}
    private void jTextFieldPosXActionPerformed(java.awt.event.ActionEvent evt){}
    private void jTextFieldPosYActionPerformed(java.awt.event.ActionEvent evt){}
    private void jTextFieldPosZActionPerformed(java.awt.event.ActionEvent evt){}
    private void jTextFieldForceZActionPerformed(java.awt.event.ActionEvent evt){ }
    private void jTextFieldGripperDistanceActionPerformed(java.awt.event.ActionEvent evt){}

    /*********************************************************************************************************
     * jToggleButton0ItemStateChanged
     ********************************************************************************************************/
    private void jToggleButton0ItemStateChanged(java.awt.event.ItemEvent evt) {

        switch (evt.getStateChange()) {
            case 1:
                belt.registerInstance();
                break;
            case 2:
                break;
        }
    }

    /*********************************************************************************************************
     * jToggleButton1ItemStateChanged
     ********************************************************************************************************/
    private void jToggleButton1ItemStateChanged(java.awt.event.ItemEvent evt) {

        switch (evt.getStateChange()) {
            case 1:
                belt.startHostComponent();
                break;
            case 2:
                belt.stopHostComponent();
                break;
        }
    }

    /*********************************************************************************************************
     * Button2 Operations
     ********************************************************************************************************/
    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {}
    private void jToggleButton2StateChanged(javax.swing.event.ChangeEvent evt) {}
    private void jToggleButton2ItemStateChanged(java.awt.event.ItemEvent evt) {

        switch (evt.getStateChange()) {
            case 1:
                jToggleButtonBelt.setText("Stop Belt");
                //belt.setSpeed(0.1);
                belt.start();
                break;
            case 2:
                jToggleButtonBelt.setText("Start Belt");
                belt.stop();
                break;
        }
    }

    /*********************************************************************************************************
     * Main function
     *
     * @param args the command line arguments
     ********************************************************************************************************/
    public static void main(String args[]) {

        if(args.length == 1 && (args[0].equals("noGUI"))) // launch application without a GUI
        {
            ConveyorBelt belt = new ConveyorBelt();

            System.out.println("Started application without GUI!\n Trying to host I4.0 Component:");
            belt.startHostComponent();

            System.out.println("\n Trying to register Belt:");
            belt.registerInstance();

            System.out.println("\n Trying to start Belt communication:");
            belt.start();
        }
        else // launch application with a GUI
        {
            /* Set Nimbus look and feel (http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html) */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(MainConveyorBelt.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(MainConveyorBelt.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(MainConveyorBelt.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(MainConveyorBelt.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }

            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new MainConveyorBelt().setVisible(true);
                }
            });
        }
    }
}
